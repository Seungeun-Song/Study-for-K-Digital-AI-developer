### DB 사용 목적 - (저장/ 검색) 관리

|  파일 DB  | 관계형 DB(RDBMS) | NoSQL(JSON-키:밸류 형태) |
| :-------: | :--------------: | ------------------------ |
| txt.excel |      Oracle      | Mongo DB                 |
| 파일 저장 |      MSSQL       | HBASE                    |
|           |      MYSQL       | Reris                    |
|           |     Maria DB     |                          |
|           |       DB2        |                          |
|           |      SQLite      |                          |

관계형 DB(RDBMS : relational DB management system) - 

​	여러 사람이 동시 열람가능. 백업(수정 등등)의 용이-수정될 동일한 파일을 여기저기서 손볼 필요X



### DBMS - 데이터베이스를 관리/운영하는 역할

1.  업무파악(Data가 어떻게 흘러가는지)
2. DB 모델링(ex, 계좌이체 - 조회, 이체, 등등 => 이런 데이터 작업)
   * 테이블형태를 중심적으로.  테이블과 테이블의 연계를 위해
3. 테이블(제약사항, 관계, 주요키, 외래키 등 - 어떻게 이루어지는지)
4. 데이터 입력(표준 SQL문(structured query language) - DDL,DML,DCL)
5. 데이터 조회, 수정, 삭제
6. 관리(백업, 보안 등등)



####  DB 관리 = 백업(backup) | 복원(restore) | 보안(security)-접근성

---

# 1. DBMS

---

### 1. DB 특징 

#### 	1) 데이터 베이스의 무결성

| 오류가 없는 무결성        | 제약 조건을 통해 무결성 구현 |
| ------------------------- | ---------------------------- |
| 어떤 경로를 통해 들어왔든 | 반드시 있어야 하는 데이터    |
|                           | 중복되지 않는 데이터         |

#### 	2) 데이터의 독립성

​		* 데이터 베이스와 응용 프로그램간 독립적 관계

​		* 데이터베이스의 크기 변경, 저장소 변경에도 기존에 작성된 응용 프로그램에 영향X



#### 	3) 보안

​		* 접근성, 권한



#### 	4) 데이터 중복의 최소화

#### 	5) 응용 프로그램 제작 및 수정 쉬워짐

​		* 데이터 베이스 이용

​		* 통일된 방식으로 응용 프로그램 작성 가능

​		* 유지보수 쉬워짐



#### 	6) 데이터 안전성 향상

​		* DBMS가 자체적으로 제공하는 백업/복원 기능 이용해 데이터 손실 시 복원/복구





### 2. 데이터 베이스 관리 시스템

1. ) SQL(Structured Query Language) 
   * DBMS에 사용되는 언어
   * DBMS 제작 회사와 독립적
   * 다른 시스템으로 이식성이 좋음 - 표준 SQL
   * 대화식 언어 - 질의 후 바로 결과를 얻는 대화식 언어



### 3. DBMS 분류

​	관계형 DBMS

| 장점                                               | 단점                                      |
| -------------------------------------------------- | ----------------------------------------- |
| 업무가 변화될 경우 쉽게 변화에 순응할 수 있는 구조 | 시스템 자원을 많이 차지해 전반적으로 느림 |
| 유지보수 측면에서 편리함                           | 하드웨어의 급속한 발전으로 보완됨         |
| 대용량 데이터의 관리와 데이터 무결성 보장          |                                           |











---

### 외래키 ? 

 ( 학번(기본정보) - 순번(수강신청서) 테이블인 기본키들을 서로 연결시키는 키)

**기본키**

<기본정보>

| 학번(primary Key) | 이름   | 주소 | 핸드폰번호 |
| ----------------- | ------ | ---- | ---------- |
| 127               | 홍길동 | 서울 |            |
| 153               | 홍길순 |      |            |
| 219               | 홍길동 | 부산 |            |

<수강신청서>

| 순번(primary Key) | 학업 | 과목명 | 코드 |
| ----------------- | ---- | ------ | ---- |
|                   |      |        |      |

---

ex) A사 쇼핑몰 DB 

**client** (이용자, 사용자)- 조회, 수정/ **관리자**-조회, 수정,삭제, 입력 .../ **장비** - 입력 ... <-> **server**

| 이용자         | 사용자     |
| -------------- | ---------- |
| 고객(customer) | 직원(user) |

